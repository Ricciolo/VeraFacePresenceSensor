<?xml version="1.0"?>
<implementation>
	<specVersion>
		<major>1</major>
		<minor>5</minor>
	</specVersion>
	<settings>
		<protocol>cr</protocol>
	</settings>
	<startup>main</startup>
	<functions>
		local PRESENCE_SID = "urn:ricciolo:serviceId:PresenceSensor1"
		local SWITCH_SID = "urn:upnp-org:serviceId:SwitchPower1"
		local SECURITY_SID = "urn:micasaverde-com:serviceId:SecuritySensor1"
		local HADEVICE_SID = "urn:micasaverde-com:serviceId:HaDevice1"
		local GATEWAY_SID = "urn:micasaverde-com:serviceId:HomeAutomationGateway1"

		local DEFAULT_TIME_WINDOW = "5"

		local function log(text)
			local id = PARENT_DEVICE or "unknown"
			luup.log("PresenceSensor #" .. id .. " " .. text)
		end

		--
		-- Initializes variables if none were found in config
		--
		local function initSettings(timeWindow, enable)
			timeWindow = timeWindow or DEFAULT_TIME_WINDOW
			enable = enable or "1"

			luup.variable_set(PRESENCE_SID, "TimeWindow", timeWindow, parentDevice)
			luup.variable_set(SWITCH_SID, "Target", enable, parentDevice)
			luup.variable_set(SWITCH_SID, "Status", enable, parentDevice)

			luup.variable_set(SECURITY_SID, "Tripped", "0", parentDevice)

			luup.variable_set(HADEVICE_SID, "LastUpdate", os.time(os.date('*t')), parentDevice)
			luup.variable_set(HADEVICE_SID, "Configured", "1", parentDevice)

			log("Initialized variable: 'TimeWindow' = " .. timeWindow)
			log("Initialized variable: 'Enable' = " .. enable)

			luup.task("Please restart Luup to initialize the plugin.", 1, "Presence Sensor", -1)

			return timeWindow, enable
		end


		local function readSettings(parentDevice)
			local timeWindow = luup.variable_get(PRESENCE_SID, "TimeWindow", parentDevice)
			local enable = luup.variable_get(SWITCH_SID, "Status", parentDevice)
			local tripped = luup.variable_get(SECURITY_SID, "Tripped", parentDevice)

			--
			-- init configuration variables if they were empty
			--
			if (timeWindow == nil or enable == nil or tripped == nil) then
				timeWindow, enable = initSettings(timeWindow, enable)
			end

			return timeWindow, enable
		end

		local function checkVersion()
			local ui7Check = luup.variable_get(PRESENCE_SID, "UI7Check", PARENT_DEVICE) or ""
			if ui7Check == "" then
				luup.variable_set(PRESENCE_SID, "UI7Check", "false", PARENT_DEVICE)
				ui7Check = "false"
			end
			if( luup.version_branch == 1 and luup.version_major == 7 and ui7Check == "false") then
				luup.variable_set(PRESENCE_SID, "UI7Check", "true", PARENT_DEVICE)
				luup.attr_set("device_json", "D_FacePresenceSensor_UI7.json", PARENT_DEVICE)
				luup.reload()
			end
		end

		local function setTripped(parentDevice, status)
			timeWindow, enable = readSettings(parentDevice)
			if not enable then
				return
			end

			local tripped = "0"
			local time = os.time(os.date('*t'))
			if string.len(status) > 0 then
				tripped = "1"
				luup.call_delay("autoReset", tonumber(timeWindow), parentDevice .. ":" .. time)
			end

			local origTripped = luup.variable_get(SECURITY_SID, "Tripped", parentDevice) or "0"
			if (origTripped  ~= tripped) then
				luup.variable_set(SECURITY_SID, "Tripped", tripped, parentDevice)
				luup.variable_set(HADEVICE_SID, "LastUpdate", time, parentDevice)
				if ((lul_settings.newPresentValue == "1") and (origTripped == "0")) then
					luup.variable_set(PRESENCE_SID, "Names", status, parentDevice)
					luup.variable_set(SECURITY_SID, "LastTrip", time, parentDevice)
				else
					luup.variable_set(PRESENCE_SID, "Names", "", parentDevice)
				end
			end
		end

		function autoReset(data)
			function split(str,sep)
				local array = {}
				local reg = string.format("([^%s]+)",sep)
				for mem in string.gmatch(str,reg) do
					table.insert(array, mem)
				end
				return array
    		end
			local s = split(data, ":")
			setTripped(tonumber(s[1]), s[2])
		end

		function main(parentDevice)
			PARENT_DEVICE = parentDevice

			log("starting up")

			--check UI version
			checkVersion()

			-- Validate that the device settings are configured in Vera, otherwise this code wont work.
			local timeWindow, enable = readSettings(parentDevice)
			if (timeWindow == nil) then
				log("could not be started.")
				luup.set_failure(true, parentDevice)
				return false
			end

			return true
		end
	</functions>
	<actionList>		
		<action>
			<serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
			<name>SetArmed</name>
			<run>
				luup.variable_set(SECURITY_SID, "Armed", lul_settings.newArmedValue, lul_device)
				return 4, 0
			</run>
		</action>
		<action>
			<serviceId>urn:ricciolo:serviceId:PresenceSensor1</serviceId>
			<name>SetPresent</name>
			<run>
				setTripped(parentDevice, lul_settings.newPresentValue)

				return 4, 0
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
			<name>SetTarget</name>
			<run>
				luup.variable_set(SWITCH_SID, "Target", lul_settings.newTargetValue, parentDevice)
				luup.variable_set(SWITCH_SID, "Status", lul_settings.newTargetValue, parentDevice)
			</run>
		</action>
	</actionList>
</implementation>
